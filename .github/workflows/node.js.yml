name: Opal (opal-backend-service) CI/CD

on:
  push:
    branches:
      - main  # Adjust based on your workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate with GitHub Packages
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Install Pack CLI
        run: |
          curl -sSL "https://github.com/buildpacks/pack/releases/download/v0.36.4/pack-v0.36.4-linux.tgz" | tar xz
          sudo mv pack /usr/local/bin/

      - name: Build nestjs app for production
        run: |
          npm install
          npm install -g @nestjs/cli
          npm run build
          nest

      - name: Build container with Buildpacks
        run: |
          pack config default-builder 'heroku/builder:24' && pack build ghcr.io/${{ github.repository_owner }}/nextjsbuildpack:latest --buildpack heroku/nodejs-engine@3.4.8

      - name: Tag image with build number
        run: |
          docker tag ghcr.io/${{ github.repository_owner }}/nextjsbuildpack:latest ghcr.io/${{ github.repository_owner }}/nextjsbuildpack:${{ github.run_number }}
        
      - name: Push image to GitHub Packages
        run: |
          docker push ghcr.io/${{ github.repository_owner }}/nextjsbuildpack:${{ github.run_number }}

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3

      - name: Configure Kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > kubeconfig.yaml

      - name: Update image in Kubernetes deployment file
        run: |
          sed -i 's|ghcr.io/imohiosen/nextjsbuildpack:latest|ghcr.io/${{ github.repository_owner }}/nextjsbuildpack:${{ github.run_number }}|' k8s/deployment.yaml

      - name: Print out deployment file
        run: cat k8s/deployment.yaml

      - name: Deploy to Kubernetes
        run: |
          ls -al
          kubectl --kubeconfig=kubeconfig.yaml apply -f k8s/deployment.yaml


